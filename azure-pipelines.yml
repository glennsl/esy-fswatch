stages:
- stage: Build
  jobs:
  - job: macOS
    pool:
      vmImage: 'macOS-latest'
    steps:
      - template: ./.ci/use-esy.yml
      - bash: ./test.sh
        displayName: "Test package"
      - template: ./.ci/copy-install.yml
        parameters:
          platform: darwin

  - job: Linux
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
      - template: ./.ci/use-esy.yml
      - bash: ./test.sh
        displayName: "Test package"
      - template: ./.ci/copy-install.yml
        parameters:
          platform: linux

  - job: Windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: ./.ci/use-esy.yml
      - bash: mkdir -p test_dir
        displayName: 'make test dir'
      - bash: |
          echo '{"esy": {"release": {"bin": [], "includePackages": ["fswatch", "libiconv"]}}, "dependencies": {"fswatch" : "ulrikstrid/esy-fswatch:windows.json#'$(git rev-parse --short HEAD)'", "ocaml": "< 4.09.0", "libiconv": "esy-packages/esy-libiconv#38bab1ac2d53ae01b9c945620f6267446c4b2baa"}}' > package.json
        displayName: 'create test package.json'
        workingDirectory: test_dir
      - script: esy install
        displayName: 'Install esy-deps'
        workingDirectory: test_dir
      - script: esy build --verbose
        displayName: 'Build test project'
        workingDirectory: test_dir
      - script: esy b fswatch --help
        displayName: 'Test if fswatch is installed'
        workingDirectory: test_dir
      - script: esy b which fswatch
        displayName: 'Test if fswatch is installed'
        workingDirectory: test_dir
      - template: ./.ci/copy-install.yml
        parameters:
          platform: windows

- stage: Create_package
  dependsOn: [Build]
  jobs:
  - job: Create_package
    displayName: Create package
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: NodeTool@0
      displayName: "Use Node 8.x"
      inputs:
        versionSpec: 8.x

    - download: current
      artifact: install-darwin

    - download: current
      artifact: install-linux

    - download: current
      artifact: install-windows

    - script: |
        mkdir -p $(Pipeline.Workspace)/package
        cp ./.ci/package.json $(Pipeline.Workspace)/package/package.json
      displayName: Copy the package.json

    - script: |
        mv $(Pipeline.Workspace)/install-darwin $(Pipeline.Workspace)/package
        mv $(Pipeline.Workspace)/install-linux $(Pipeline.Workspace)/package
        mv $(Pipeline.Workspace)/install-windows $(Pipeline.Workspace)/package
      displayName: Move artifacts in place

    - script: |
        npm pack .
        mv esy-fswatch-prebuilt-* esy-fswatch-prebuilt.tgz
      displayName: npm pack
      workingDirectory: 
        $(Pipeline.Workspace)/package

    - upload: $(Pipeline.Workspace)/package/esy-fswatch-prebuilt.tgz
